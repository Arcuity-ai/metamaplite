# MetaMap Lite configuration 
#
# Lucene indexes
metamaplite.cuiconceptindex: /nfsvol/nlsaux15/lucenedb/strict/cuiconcept
metamaplite.firstwordsofonewideindex: /nfsvol/nlsaux15/lucenedb/strict/first_words_of_one_WIDE
metamaplite.cuisourceinfoindex: /nfsvol/nlsaux15/lucenedb/strict/cui_sourceinfo
metamaplite.cuisemantictypeindex: /nfsvol/nlsaux15/lucenedb/strict/cui_st
metamaplite.varsindex: /nfsvol/nlsaux15/lucenedb/strict/vars

# OpenNLP model files
opennlp.en-sent.bin.path:/usr/local/pub/nlp/opennlp/models/en-sent.bin
opennlp.en-token.bin.path:/usr/local/pub/nlp/opennlp/models/en-token.bin
opennlp.en-pos-maxent.bin.path:/usr/local/pub/nlp/opennlp/models/en-pos-maxent.bin

# What should a pipeline look-like?
#
# pipe-elements: (properties)
#
#     metamaplite.pipe.element.<element-name>: transformation method|input class|output class
#
# pipeline:  (one property line)
#
#     metamaplite.pipeline.<name>: element1|element2|...
#
# sentence pipeline elements
# 
metamaplite.pipe.element.tokenizesentence: gov.nih.nlm.nls.metamap.lite.SentenceAnnotator.tokenizeSentence|bioc.BioCSentence|bioc.BioCSentence|tokenize sentence
metamaplite.pipe.element.displaytokenlist: gov.nih.nlm.nls.metamap.prefix.Tokenize.displayTokenList|bioc.BioCSentence|bioc.BioCSentence|display tokenlist
metamaplite.pipe.element.genentityset: gov.nih.nlm.nls.metamap.lite.SentenceAnnotator.addEntities|bioc.BioCSentence|bioc.BioCSentence|find entities 
metamaplite.pipe.element.applycontext: gov.nih.nlm.nls.metamap.lite.context.ContextWrapper.applyContext|bioc.BioCSentence|bioc.BioCSentence|hedging
metamaplite.pipe.element.displayentityset: gov.nih.nlm.nls.metamap.lite.EntityLookup.displayEntitySet|bioc.BioCSentence|bioc.BioCSentence|display entities 
#
# sentence pipeline
#
metamaplite.pipeline.simple.sentence: tokenizesentence|genentityset|applycontext|displayentityset
#
# text pipeline elements
#
metamaplite.pipe.element.createSentences: gov.nih.nlm.nls.metamap.lite.SentenceExtractor.createSentences|bioc.BioCPassage|bioc.BioCPassage|extract sentences from text
metamaplite.pipe.element.processSentences: gov.nih.nlm.nls.metamap.lite.BioCPipeline.processSentences|bioc.BioCPassage|bioc.BioCPassage|process sentences with pipeline: metamaplite.pipeline.simple.sentence
#
# text pipeline 
#
metamaplite.pipeline.simple.passage: createSentences|processSentences

